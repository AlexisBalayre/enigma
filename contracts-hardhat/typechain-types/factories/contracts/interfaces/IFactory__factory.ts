/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFactory,
  IFactoryInterface,
} from "../../../contracts/interfaces/IFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "OnlyAdminCanCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "NewCollectionDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IAccessManager",
        name: "_accessManager",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "deployCollection",
    outputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getCollectionAddress",
    outputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollectionsAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "_collections",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollectionsNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "_collectionNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
    ],
    name: "isCollectionAddress",
    outputs: [
      {
        internalType: "bool",
        name: "_isCollectionAddress",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_secretNftContractImplementation",
        type: "address",
      },
    ],
    name: "setSecretNFTContractImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IFactoryInterface {
    return new Interface(_abi) as IFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IFactory {
    return new Contract(address, _abi, runner) as unknown as IFactory;
  }
}
